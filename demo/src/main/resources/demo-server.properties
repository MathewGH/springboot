# Spring properties
spring.application.name: accounts-service

# Discovery Server Access
eureka.client.serviceUrl.defaultZone: http://localhost:9999/eureka/

#specify the dev,test,prod environment
spring.profiles.active=test

server.port=9000

#banner time
#banner.file.location=classpath:banner.txt

spring.mvc.view.prefix=/
spring.mvc.view.suffix=.jsp
application.message: Hello Phil

# Set whether to always apply the MessageFormat rules, parsing even messages without arguments.
spring.messages.always-use-message-format=false 
# Comma-separated list of basenames, each following the ResourceBundle convention.
spring.messages.basename=i18n/messages 
# Loaded resource bundle files cache expiration, in seconds. When set to -1, bundles are cached forever.
spring.messages.cache-seconds=-1 
# Message bundles encoding.
#spring.messages.encoding=UTF-8 
# Set whether to fall back to the system Locale if no files for a specific Locale have been found.
spring.messages.fallback-to-system-locale=true 


# QUARTZ SCHEDULER (QuartzProperties)
#spring.quartz.job-store-type=memory # Quartz job store type.
#spring.quartz.properties.*= # Additional Quartz Scheduler properties.
#spring.quartz.jdbc.initialize-schema=false # Create the required Quartz Scheduler tables on startup.
#spring.quartz.jdbc.schema=classpath:org/quartz/impl/jdbcjobstore/tables_@@platform@@.sql # Path to the SQL file to use to initialize the database schema.


#mybatis integretion
#mybatis.config-location=classpath:mybatis-config.xml


logging.level.root=INFO
logging.level.com.example.mapper=TRACE



# ----------------------------------------
# SECURITY PROPERTIES
# ----------------------------------------
# SECURITY (SecurityProperties)
# Security authorize mode to apply.
#security.basic.authorize-mode=role 
# Enable basic authentication.
security.basic.enabled=true 
# Comma-separated list of paths to secure.
#security.basic.path=/** 
# HTTP basic realm name.
#security.basic.realm=Spring 
# Enable Cross Site Request Forgery support.
security.enable-csrf=false 
# Security filter chain order.
security.filter-order=0 
# Security filter chain dispatcher types.
security.filter-dispatcher-types=ASYNC, FORWARD, INCLUDE, REQUEST 
# Enable cache control HTTP headers.
security.headers.cache=true 
# Value for content security policy header.
security.headers.content-security-policy= 
# Content security policy mode.
security.headers.content-security-policy-mode=default 
# Enable "X-Content-Type-Options" header.
security.headers.content-type=true 
# Enable "X-Frame-Options" header.
security.headers.frame=true 
# HTTP Strict Transport Security (HSTS) mode (none, domain, all).
security.headers.hsts=all 
# Enable cross site scripting (XSS) protection.
security.headers.xss=true 
# Comma-separated list of paths to exclude from the default secured paths.
security.ignored= 
# Enable secure channel for all requests.
security.require-ssl=false 
# Session creation policy (always, never, if_required, stateless).
security.sessions=stateless 
# Default user name.
#security.user.name=user 
# Password for the default user name. A random password is logged on startup by default.
#security.user.password= 
# Granted roles for the default user name.
#security.user.role=USER 

# SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
# OAuth2 client id.
#security.oauth2.client.client-id= 
# OAuth2 client secret. A random secret is generated by default
#security.oauth2.client.client-secret= 

# SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
#security.oauth2.resource.filter-order= # The order of the filter chain used to authenticate tokens.
#security.oauth2.resource.id= # Identifier of the resource.
#security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.
#security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.
#security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.
#security.oauth2.resource.service-id=resource #
#security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.
#security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.
#security.oauth2.resource.user-info-uri= # URI of the user endpoint.

# SECURITY OAUTH2 SSO (OAuth2SsoProperties)
#security.oauth2.sso.filter-order= # Filter order to apply if not providing an explicit WebSecurityConfigurerAdapter
#security.oauth2.sso.login-path=/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server
